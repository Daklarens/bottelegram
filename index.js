const TeleBot = require('telebot');
require('dotenv').config()

const bot = new TeleBot({
    token: process.env.TOKEN,
    usePlugins: ['askUser']
});

const users = [];
const korzina = {text:'–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–∞—Ä–∑–∏–Ω—É', call:'korzina_add'};

const helloText = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç –ø–æ –≤—ã—à–∏–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –æ–¥–µ–∂–¥–µ! üßµüëï\n–ú—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –∑–¥–µ—Å—å. –ù–∞—à –±–æ—Ç –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –≤—ã—à–∏–≤–∫–∏ –Ω–∞ –≤–∞—à–µ–π –æ–¥–µ–∂–¥–µ. –ü—Ä–æ—Å—Ç–æ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–∞–º, —á—Ç–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –≤–∏–¥–µ—Ç—å, –∏ –º—ã —Å–¥–µ–ª–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ–µ, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à—É –æ–¥–µ–∂–¥—É –æ—Å–æ–±–µ–Ω–Ω–æ–π –∏ —Å—Ç–∏–ª—å–Ω–æ–π.\n–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å —Å–æ–æ–±—â–∏—Ç—å –Ω–∞–º. –£–¥–∞—á–∏ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–∞—à–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∏–ª—è! üíºüßµ"

const replyMarkup_menu = bot.inlineKeyboard([
    [
        // First row with command callback button
        bot.inlineButton('–ö–∞—Ç–∞–ª–æ–≥ –¥–∏–∑–∞–π–Ω–æ–≤', {callback: 'katalog'})
    ],
    [
        // First row with command callback button
        bot.inlineButton('–ò–∑–¥–µ–ª–∏—è', {callback: 'izdel'})
    ],
    [
        // Second row with regular command button
        bot.inlineButton('–°–¥–µ–ª–∞–π –°–∞–º!', {callback: 'create'})
    ]
]);
const replyMarkup_katalog = bot.inlineKeyboard([
    [
        // First row with command callback button
        bot.inlineButton('140X140', {callback: '140X140'})
    ],
    [
        // First row with command callback button
        bot.inlineButton('140X200', {callback: '140X200'})
    ],
    [
        // Second row with regular command button
        bot.inlineButton('200X200', {callback: '200X200'})
    ],
    [
        // Second row with regular command button
        bot.inlineButton('280X360', {callback: '280X360'})
    ],
    [
        // Second row with regular command button
        bot.inlineButton('<< –ù–∞–∑–∞–¥', {callback: 'menu'})
    ]
]);
let replyMarkup_izdel = bot.inlineKeyboard([
    [
        // First row with command callback button
        bot.inlineButton('<<<', {callback: 'back_tovar'}),
        bot.inlineButton('>>>', {callback: 'next_tovar'})
        
    ],
    [
        // First row with command callback button
        bot.inlineButton(`${korzina.text }`, {callback:korzina.call})
    ],
    [
        // Second row with regular command button
        bot.inlineButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', {callback: 'payment'})
    ],
    [
        // Second row with regular command button
        bot.inlineButton('<< –ù–∞–∑–∞–¥', {callback: 'menu'})
    ]
]);

// On start command
bot.on('/start', async msg => {
    // Send message with keyboard markup
    return bot.sendMessage(msg.from.id, helloText, {parseMode: 'html', replyMarkup:replyMarkup_menu}).then(re => {newUser(re)})
});

bot.on('/hello', msg => {
    return bot.sendMessage(msg.from.id, 'Hello!');
});

// Button callback
bot.on('callbackQuery', async(msg) => {

    const chatId = users[0].id
    const messageId = users[0].las_mess
    switch(msg.data){
        case 'katalog':
            console.log(`${chatId},${messageId}`)
            return  bot.editMessageText({chatId, messageId}, ` –ö–∞—Ç–∞–ª–æ–≥ –î–∏–∑–∞–π–Ω–æ–≤`,{parseMode: 'html'},{replyMarkup:replyMarkup_katalog}).catch(error => console.log('Error:', error));
        break;
        case 'izdel':
            console.log(`${chatId},${messageId}`)
            bot.editMessageText({chatId, messageId}, `–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1 –∏–∑ 10\n\n<b>–ü–µ—Ä—Å–∏–∫</b>\n–†–∞–∑–º–µ—Ä—ã: S, M\n–¶–≤–µ—Ç: –ë–µ–ª—ã–π, –ß–µ—Ä–Ω—ã–π\n–¶–µ–Ω–∞: <b>2500</b> —Ä—É–±.\n<a href="https://ae01.alicdn.com/kf/HTB1vrz.boz.BuNjt_j7q6x0nFXaS.jpg">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</a>`,{parseMode: 'html', replyMarkup:replyMarkup_izdel}).catch(error => console.log('Error:', error));
            korzina.text = '–ó–∞–ª—É–ø–∞'
            korzina.call = 'korzinasadas_1'
            return
        break;
        case 'create':
            const id = msg.from.id;
            return bot.sendMessage(id, '–ù–∞ —á–µ–º –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ?', {ask: 'forma'});
        break;
        case 'payment':
            const inlineKeyboard = bot.inlineKeyboard([
                [
                    bot.inlineButton('–û–ø–ª–∞—Ç–∏—Ç—å', {pay: true})
                ]
            ]); 
        
            return bot.sendInvoice(msg.from.id, {
                title: '–§—É—Ç–±–æ–ª–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º - –ü–µ—Ä—Å–∏–∫',
                description: '–§—É—Ç–±–æ–ª–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –ø–µ—Ä—Å–∏–∫ - –±–µ–ª–æ–≥–æ —Ü–≤–µ—Ç–∞! –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –¥–µ—Ç–∞–ª–µ–π',
                payload: 'telebot-test-invoice',
                providerToken: '401643678:TEST:685469ce-2ca8-43c1-9f8d-d90f23956214',
                startParameter: 'pay',
                currency: 'RUB',
                sendPhoneNumberToProvider: true,
                photo: {url:'https://ae01.alicdn.com/kf/HTB1vrz.boz.BuNjt_j7q6x0nFXaS.jpg'},
                prices: [
                    {label: '–§—É—Ç–±–æ–ª–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º', amount: 250000},
                    {label: '–ü–æ–¥–∞—Ä–æ—á–Ω—ã–π –ø–∞–∫–µ—Ç', amount: 10000},
                    {label: '–î–æ—Å—Ç–∞–≤–∫–∞', amount: 100000}
                ],  
                replyMarkup: inlineKeyboard
            }).then(data => {
                console.log('OK', data);
            }).catch(error => {
                console.log('ERROR', error);
            });
        break;
        case 'menu':
            console.log(`${chatId},${messageId}`)
            return  bot.editMessageText({chatId, messageId}, ` ${helloText}`,{parseMode: 'html'},{replyMarkup:replyMarkup_menu}).catch(error => console.log('Error:', error));
        break;
        case 'korzina_add':
            
            console.log(`${chatId},${messageId}`)
            
            console.log(korzina)
            return  bot.editMessageReplyMarkup({chatId, messageId}, {replyMarkup:replyMarkup_izdel}).catch(error => console.log('Error:', error));
        break;
        case 'korzina_1':
            console.log("korzina ------1")
        break;
    }
    bot.answerCallbackQuery(msg.id);
 
});

const newUser = async(msg) =>{
    console.log(msg)
    users.push({id:msg.chat.id, las_mess:msg.message_id})
    console.log(users)
}
/*
// Ask name event
bot.on('ask.name', msg => {

    const id = msg.from.id;
    const name = msg.text;

    // Ask user age
    return bot.sendMessage(id, `Nice to meet you, ${ name }! How old are you?`, {ask: 'age'});

});

// Ask age event
bot.on('ask.age', msg => {

    const id = msg.from.id;
    const age = Number(msg.text);

    if (!age) {

        // If incorrect age, ask again
        return bot.sendMessage(id, 'Incorrect age. Please, try again!', {ask: 'age'});

    } else {

        // Last message (don't ask)
        return bot.sendMessage(id, `You are ${ age } years old. Great!`);

    }

});
*/

bot.on('ask.forma', msg => {
    const id = msg.from.id;
    // Ask user age
    return bot.sendMessage(id, `–•–æ—Ä–æ—à–æ, –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º —Å–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ`, {ask: 'image'});

});

bot.on('ask.image', msg => {
    const id = msg.from.id;
    // Ask user age
    return bot.sendMessage(id, `–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ä–∞–∑–º–µ—Ä`, {ask: 'size'});

});

bot.on('ask.size', msg => {
    const id = msg.from.id;
    // Ask user age
    return bot.sendMessage(id, `–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏`, {ask: 'contact'});

});
bot.on('ask.contact', msg => {
    const id = msg.from.id;
    // Ask user age
    return bot.sendMessage(id, `–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤`, {});

});

bot.on('shippingQuery', (msg) => {
    console.log('shippingQuery', msg);
});

bot.on('preShippingQuery', (msg) => {
    console.log('preShippingQuery', msg);

    const id = msg.id;
    const isOk = true;

    return bot.answerPreCheckoutQuery(id, isOk);

});

bot.on('successfulPayment', (msg) => {
    console.log('successfulPayment', msg);

    return bot.sendMessage(msg.from.id, `–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É, ${msg.from.first_name}! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ–µ –≤—Ä–µ–º—è`);

});


bot.start();